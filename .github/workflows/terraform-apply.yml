name: Terraform Apply

on:
  push:
    branches: [master]
    paths:
      - 'infra/terraform/**'

concurrency:
  group: run-terraform-apply

jobs:
  apply-config:
    name: Plan and apply
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        state-file:
          [
            "database",
            "k8s",
            "networking"
          ]
    defaults:
      run:
        working-directory: ./infra/terraform/${{ matrix.state-file }}
    steps:
      - name: Wait for any ongoing action execution to finish
        uses: softprops/turnstyle@v1
        with:
          same-branch-only: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terragrunt
        uses: autero1/action-terragrunt@v1.3.1
        with:
          terragrunt_version: 0.38.0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.9

      - name: Setup aws-cli
        uses: unfor19/install-aws-cli-action@v1.0.6
        with:
          version: 2
        continue-on-error: false

      - name: Add AWS profile config
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile $AWS_PROFILE
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile $AWS_PROFILE
          aws configure set region $AWS_REGION --profile $AWS_PROFILE
        env:
          AWS_PROFILE: aiq-infra
          AWS_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform init
        run: terragrunt init

      - name: Terragrunt plan
        env:
          SKIP_INIT: true
        run: terragrunt plan -input=false -out=/tmp/tfplan

      - name: Terragrunt apply
        env:
          SKIP_INIT: true
        run: terragrunt apply -input=false /tmp/tfplan
