name: Terraform plan

on:
  pull_request:
    branches: [main]
    paths:
      - 'infra/terraform/**'

concurrency:
  group: run-terraform-plan

jobs:
  plan-config:
    name: Review changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        state-file:
          [
            "database",
            "k8s",
            "networking"
          ]
    defaults:
      run:
        working-directory: ./infra/terraform/${{ matrix.state-file }}
    steps:
      - name: Wait for Running apply
        uses: lewagon/wait-on-check-action@v1.3.0
        with:
          ref: master
          check-name: "Plan and apply (${{ matrix.state-file }})"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success,skipped,cancelled,failure

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.3.1
        with:
          terragrunt_version: 0.38.0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.9
          terraform_wrapper: false

      - name: Setup tflint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.20.3
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup aws-cli
        uses: unfor19/install-aws-cli-action@v1.0.6
        with:
          version: 2
        continue-on-error: false

      - name: Add AWS profile config
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile $AWS_PROFILE
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile $AWS_PROFILE
          aws configure set region $AWS_REGION --profile $AWS_PROFILE
        env:
          AWS_PROFILE: aiq-infra
          AWS_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check -recursive .

      - name: Tflint
        run: tflint

      - name: Terraform init
        run: terragrunt init

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        env:
          SKIP_INIT: true
        run: |
          terragrunt plan --terragrunt-log-level error -no-color -out=tfplan_resources_planned | tee /tmp/plan.txt
          exit_code=${PIPESTATUS[0]}
          sed -i '/Refreshing state.../d' /tmp/plan.txt
          grep -Ei "Plan:|No changes" /tmp/plan.txt | tee /tmp/output.txt || true
          sed -n '/Terraform will perform the following actions:/,$p' /tmp/plan.txt | tee /tmp/plan_changes.txt
          exit $exit_code

      - name: Terraform JSON output
        run: |
          terraform show -json ./tfplan_resources_planned > tfplan_resources_planned.json

      - name: Comment on PR
        uses: actions/github-script@v6
        if: always()
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const plan = fs.readFileSync("/tmp/plan_changes.txt", "utf8");
            const plan_output = fs.readFileSync("/tmp/output.txt", "utf8");
            const output = `⚙️ **Working Directory**: \`${{ matrix.state-file }}\`
            🖌 **Terraform Format and Style**: ${{ steps.fmt.outcome == 'success' && '✅' || '❌' }}
            📖 **Terraform Plan**: ${{ steps.plan.outcome == 'success' && '✅' || '❌' }}
            🧑‍💻 **Pusher**: @${{ github.actor }}
            **Summary**: \`${ plan_output }\`
            <details><summary>Show Plan</summary>

            \`\`\`
            ${ plan }
            \`\`\`
            </details>
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
